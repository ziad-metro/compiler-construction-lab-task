#include -> INCLUDE
<stdio.h> -> HEADER
int -> INT
main -> MAIN
( -> LP
) -> RP
{ -> LB
int -> INT
n -> ID
, -> COMMA
i -> ID
; -> SEMI
unsigned long long -> UNSIGNED_LONG_LONG
factorial -> ID
= -> ASSIGN
1 -> NUMBER
; -> SEMI
printf -> PRINTF
( -> LP
" -> DOUBLE_QUOTE
Enter an integer:  -> STRING_CONTENT
" -> DOUBLE_QUOTE
) -> RP
; -> SEMI
scanf -> SCANF
( -> LP
" -> DOUBLE_QUOTE
%d -> FORMAT_SPECIFIER_D
" -> DOUBLE_QUOTE
, -> COMMA
& -> ADDRESS
n -> ID
) -> RP
; -> SEMI
if -> IF
( -> LP
n -> ID
< -> <
0 -> NUMBER
) -> RP
{ -> LB
printf -> PRINTF
( -> LP
" -> DOUBLE_QUOTE
Factorial of negative number doesn't exist. -> STRING_CONTENT
\n -> ESCAPED_CHAR
" -> DOUBLE_QUOTE
) -> RP
; -> SEMI
} -> RB
else -> ELSE
{ -> LB
for -> FOR
( -> LP
i -> ID
= -> ASSIGN
1 -> NUMBER
; -> SEMI
i -> ID
<= -> LE
n -> ID
; -> SEMI
++ -> INCREMENT
i -> ID
) -> RP
{ -> LB
factorial -> ID
*= -> MUL_ASSIGN
i -> ID
; -> SEMI
} -> RB
printf -> PRINTF
( -> LP
" -> DOUBLE_QUOTE
Factorial of %d = %llu -> STRING_CONTENT
\n -> ESCAPED_CHAR
" -> DOUBLE_QUOTE
, -> COMMA
n -> ID
, -> COMMA
factorial -> ID
) -> RP
; -> SEMI
} -> RB
return -> RETURN
0 -> NUMBER
; -> SEMI
} -> RB
